name: UWP app

on:
  push:
    branches:
    - release/*
  workflow_dispatch:

env:
  Project_Name: 'Yugen.DJ.Uwp'

jobs:

  build:
    runs-on: windows-latest
    outputs:
      MajorMinorPatch: ${{ steps.gitversion.outputs.MajorMinorPatch }}
    env:
      Configuration: 'Release'
      Solution_Name: 'Yugen.DJ.sln'
      appxPackageDir: '${{ github.workspace }}\AppxPackages'
      appxmanifest: '**/*.appxmanifest'
      
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0
      with:
        versionSpec: '5.x'

    - name: Determine Version
      id:   gitversion
      uses: gittools/actions/gitversion/execute@v0
      
    - name: Update manifest version
      run: |
        [xml]$manifest = get-content ".\${{ env.Project_Name }}\Package.appxmanifest"
        $manifest.Package.Identity.Version = "${{ steps.gitversion.outputs.MajorMinorPatch }}.0"
        $manifest.save(".\${{ env.Project_Name }}\Package.appxmanifest")        

    - name: Set up dependency caching for faster builds
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Setup NuGet
      uses: nuget/setup-nuget@v1
      with:
        nuget-api-key: ${{ secrets.NUGET_KEY }}

    - name: Restore dependencies
      run: nuget restore ${{ env.Solution_Name }}
            
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1    
      with:
        msbuild-architecture: x64

    - name: Create the app package
      run: | 
        msbuild ${{ env.Solution_Name }} `
          /p:AppxBundlePlatforms="${{ env.Appx_Bundle_Platforms}}" `
          /p:AppxPackageDir="${{ env.appxPackageDir }}" `
          /p:AppxBundle=${{ env.Appx_Bundle }} `
          /p:UapAppxPackageBuildMode=${{ env.Appx_Package_Build_Mode }} `
          /p:AppxPackageSigningEnabled=false `
          /p:Configuration=${{ env.Configuration }} 
      env:
        Platform: x64
        Appx_Bundle: Always
        Appx_Bundle_Platforms: 'x64|ARM64'
        Appx_Package_Build_Mode: StoreUpload    

    - name: Upload msixupload
      uses: actions/upload-artifact@v3
      with:
        name: msixupload
        path: ${{ env.appxPackageDir }}\**\*.msixupload
  
  deploy:
    runs-on: windows-latest
    needs: [build]
    environment: PROD
    env:
      ARTIFACT_DIRECTORY: artifact
      STORE_APP_ID: 9PKX15RGL06W
      MajorMinorPatch: ${{needs.build.outputs.MajorMinorPatch}}

    steps:
    - uses: actions/download-artifact@v3
      with:
        name: msixupload
        path: ${{ env.ARTIFACT_DIRECTORY }}
        
    - uses: isaacrlevin/windows-store-action@1.0
      name: Publish to Store
      with:
        tenant-id: ${{ secrets.AZURE_AD_TENANT_ID }}
        client-id: ${{ secrets.AZURE_AD_APPLICATION_CLIENT_ID }}
        client-secret: ${{ secrets.AZURE_AD_APPLICATION_SECRET }}
        app-id: ${{ env.STORE_APP_ID }}
        package-path: "${{ env.ARTIFACT_DIRECTORY }}"

    - uses: softprops/action-gh-release@v1
      name: Release        
      with:
        tag_name: ${{env.MajorMinorPatch}}
