<UserControl x:Class="Yugen.DJ.Uwp.Views.Controls.Deck"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:triggers="using:Yugen.DJ.Uwp.StateTriggers"
             xmlns:controls="using:Yugen.Toolkit.Uwp.Audio.Controls"
             xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
             xmlns:core="using:Microsoft.Xaml.Interactions.Core"
             xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
             xmlns:observableobjects="using:Yugen.DJ.Uwp.ObservableObjects"
             mc:Ignorable="d"
             d:DesignHeight="300"
             d:DesignWidth="400">

    <Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="InputTypeStates">
                <VisualState>
                    <VisualState.StateTriggers>
                        <triggers:SideStateTrigger Side="{x:Bind ViewModel.Side}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="PlayToggleButton.(Grid.Column)"
                                Value="2" />
                        <Setter Target="EjectButton.(Grid.Column)"
                                Value="1" />
                        <Setter Target="EqualizerButton.(Grid.Column)"
                                Value="0" />
                        <Setter Target="ButtonsGrid.HorizontalAlignment"
                                Value="Right" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <!-- Row 0 -->
        <Grid x:Name="ButtonsGrid"
              Grid.Column="1">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <ToggleButton x:Name="PlayToggleButton"
                          Grid.Column="0"
                          IsChecked="{x:Bind ViewModel.IsPaused, Mode=TwoWay}"
                          Margin="4,8">
                <FontIcon FontSize="28"
                          Glyph="{x:Bind ViewModel.PlayPauseButton, Mode=OneWay}" />
            </ToggleButton>

            <Button x:Name="EjectButton"
                    Grid.Column="1"
                    Command="{x:Bind ViewModel.OpenCommand}"
                    Background="Transparent"
                    Foreground="{StaticResource SystemColorHighlightBrush}"
                    Margin="4,8">
                <FontIcon FontSize="28"
                          Glyph="{StaticResource EjectIcon}" />
            </Button>

            <Button x:Name="EqualizerButton"
                    Grid.Column="2"
                    Command="{x:Bind ViewModel.EqualizerCommand}"
                    Background="Transparent"
                    Foreground="{StaticResource SystemColorHighlightBrush}"
                    Margin="4,8">
                <FontIcon FontSize="28"
                          Glyph="{StaticResource EqualizerIcon}" />
            </Button>

            <muxc:TeachingTip x:Name="EqualizerTeachingTip"
                              IsOpen="{x:Bind ViewModel.IsEqualizerOpen, Mode=OneWay}"
                              Target="{x:Bind EqualizerButton}">
                <muxc:TeachingTip.Content>
                    <GridView ItemsSource="{x:Bind ViewModel.Equalizer, Mode=OneWay}">
                        <GridView.ItemTemplate>
                            <DataTemplate x:DataType="observableobjects:EqualizerBandObservableOject">
                                <Slider FontSize="10" 
                                        Header="{x:Bind Label}"
                                        Height="200"
                                        Margin="4"
                                        Minimum="-15"
                                        Maximum="+15"
                                        Orientation="Vertical"
                                        TickFrequency="3"
                                        TickPlacement="Outside" 
                                        Value="{x:Bind Gain, Mode=TwoWay}"/>
                            </DataTemplate>
                        </GridView.ItemTemplate>
                    </GridView>
                </muxc:TeachingTip.Content>
            </muxc:TeachingTip>
        </Grid>

        <!-- Row 1 -->
        <Grid Grid.Column="1"
              Grid.Row="1"
              HorizontalAlignment="Center">

            <Image Source="ms-appx:///Assets/Images/Empty.png" />

            <controls:Vinyl Height="400"
                            Width="400"
                            Visibility="{x:Bind ViewModel.IsSongLoaded, Mode=OneWay}"
                            IsPaused="{x:Bind ViewModel.IsPaused, Mode=OneWay}"
                            PointerReleased="OnVinylPointerReleased"
                            Update="OnVinylUpdate">
                <!--<interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="PointerReleased">
                        <core:InvokeCommandAction Command="{x:Bind ViewModel.ScratchCommand}" />
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>-->
            </controls:Vinyl>
        </Grid>

        <!-- Row 2 -->
        <Slider Grid.Column="1"
                Grid.Row="2"
                Header="Tempo"
                Margin="4,0"
                Minimum="-95"
                Maximum="+95"
                TickFrequency="10"
                TickPlacement="Outside"
                Value="{x:Bind ViewModel.Tempo, Mode=TwoWay}" />

    </Grid>
</UserControl>